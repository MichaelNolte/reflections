When would you want to use a remote repository rather than keeping all your work local?

I use a remote repository when I want to safe my progress in the cloud. This could be useful when I want to access my files from anoter computer, collaborate with another person, or safe my progress online in case my hard drive breaks.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

I want to pull and push manually because I might want to try something on my local computer without affecting the version of my repository that I keep online. If I fuck up something locally there is still a backup online.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are only on GitHub. I use them to copy somebody else's repository into my GitHub account. Clones are on my local hard drive. They are either clones of local files or of GitHub repositories. Branches are located only within one repository. They are used for the introduction of new features or collaboration. I mainly use branches to organize my code. 

What is the benefit of having a copy of the last known state of the remote stored locally?

When there is a local commit that is different from the commit on GitHub, I can fetch the GitHub commit and merge it with the local commit. This allows me to handle simultaneous commits by different computers/people.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would probably collaborate by E-Mail. I think the collaboration would just work fine. In the End however, it would not be possible to track all changes without thinking about an elaborate system of saving all files. It would also be hard to track what part each member of the group promoted. This would also make it harder to work simultaneously on certain features. Plus we would not have branches that could be merged. The more I think about this, the more I am afraid that writing code in the old days was a pain in the ass.